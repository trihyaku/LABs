import os
import random
import datetime
import asyncio
import aiohttp
from telebot.async_telebot import AsyncTeleBot
from telebot import types

TOKEN = '7123597470:AAHb1CWkCbtkmPHCwDA9RkPmsT4g8s4thcY'
bot = AsyncTeleBot(TOKEN)

IMAGE_LINKS = [
    'https://httpbin.org/image/jpeg',
    'https://httpbin.org/image/png',
]

@bot.message_handler(commands=['start'])
async def send_welcome(message):
    markup = types.InlineKeyboardMarkup()
    markup.row(
        types.InlineKeyboardButton("üìÖ –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞", callback_data='date'),
        types.InlineKeyboardButton("üé≤ –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ", callback_data='random')
    )
    markup.row(
        types.InlineKeyboardButton("üñºÔ∏è –ü–æ–ª—É—á–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", callback_data='meme')
    )
    
    reply_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    reply_markup.add("‚ÑπÔ∏è –û –±–æ—Ç–µ", "üÜò –ü–æ–º–æ—â—å")
    
    await bot.send_message(
        message.chat.id,
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –±–æ—Ç. –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=reply_markup
    )
    await bot.send_message(
        message.chat.id,
        "–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ:",
        reply_markup=markup
    )

@bot.callback_query_handler(func=lambda call: True)
async def callback_inline(call):
    try:
        if call.data == 'date':
            now = datetime.datetime.now()
            await bot.send_message(call.message.chat.id, f"üìÖ –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è:\n{now.strftime('%d.%m.%Y %H:%M:%S')}")
        elif call.data == 'random':
            num = random.randint(1, 100)
            await bot.send_message(call.message.chat.id, f"üé≤ –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ: {num}")
        elif call.data == 'meme':
            url = random.choice(IMAGE_LINKS)
            async with aiohttp.ClientSession() as session:
                async with session.get(url) as resp:
                    if resp.status == 200:
                        await bot.send_photo(call.message.chat.id, photo=url)
                    else:
                        await bot.send_message(call.message.chat.id, "‚ö†Ô∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ")
    except Exception as e:
        error_msg = f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:\n{str(e)}"
        print(error_msg)
        await bot.send_message(call.message.chat.id, error_msg)
    finally:
        await bot.answer_callback_query(call.id)

@bot.message_handler(func=lambda message: message.text in ["‚ÑπÔ∏è –û –±–æ—Ç–µ", "–û –±–æ—Ç–µ"])
async def about(message):
    await bot.send_message(message.chat.id, "ü§ñ –Ø —É—á–µ–±–Ω—ã–π Telegram-–±–æ—Ç ü§ñ\n–°–æ–∑–¥–∞–Ω –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π Python")

@bot.message_handler(func=lambda message: message.text in ["üÜò –ü–æ–º–æ—â—å", "–ü–æ–º–æ—â—å"])
async def help(message):
    help_text = """
üÜò –°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É:
/start - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
‚ÑπÔ∏è –û –±–æ—Ç–µ - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
üñºÔ∏è –ü–æ–ª—É—á–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ - —Å–ª—É—á–∞–π–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞
üìÖ –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
üé≤ –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ - –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100
"""
    await bot.send_message(message.chat.id, help_text)

@bot.message_handler(func=lambda message: True)
async def handle_unknown(message):
    await bot.send_message(message.chat.id, "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ù–∞–∂–º–∏—Ç–µ /start")

async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    await bot.polling(non_stop=True)

if __name__ == '__main__':
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")